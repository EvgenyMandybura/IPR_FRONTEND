{"version":3,"sources":["pages/auth/index..module.scss","store/auth/actionTypes.js","store/auth/actions.js","components/formik/FormikFormError.js","components/formik/FormError.js","components/formik/FormikDropdown.js","components/formik/FormikFormGroup.js","constants/validationErrors.js","constants/validationRules.js","constants/validationSchemas.js","components/forms/SignInForm.js","pages/auth/ContainerAuth.js","pages/auth/SignIn.js","components/forms/SignUpForm.js","pages/auth/SignUp.js","store/products/actionTypes.js","store/products/actions.js","services/StorageService.js","constants/sessionStorage.js","assets/ic-placeholder.svg","components/modal/productDetails.js","hooks/useModal..js","components/common/AllProductsList.js","pages/user/allProducts.js","constants/imageSize.js","services/ToastrService.js","helpers/fileHelper.js","components/common/AddProduct.js","routes/allRoutes.js","pages/artist/addProduct.js","components/layout/Header.js","routes/middleware/AuthMiddleware.js","routes/middleware/NonAuthMiddleware.js","App.js","reportWebVitals.js","store/auth/reducer.js","store/products/reducer.js","constants/pagination.js","store/reducers.js","services/HttpService.js","services/AuthService.js","store/auth/saga.js","services/ProductService.js","store/products/saga.js","store/saga.js","store/index.js","index.js","components/layout/index.module.scss","components/modal/index.module.scss","pages/user/index.module.scss"],"names":["module","exports","LOGIN_USER","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT_USER","LOGOUT_USER_SUCCESS","LOGOUT_ERROR","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","loginSuccess","user","type","payload","logoutError","message","registerUserError","FormikFormError","children","className","getDeepValue","object","path","replace","split","filter","s","reduce","acc","val","FormError","fieldName","errors","touched","rest","error","isTouched","Option","props","isSelected","hasValue","value","data","selected","FormikDropdown","field","form","placeholder","isMulti","options","setFieldTouched","setFieldValue","option","indexOf","find","indicatorSeparator","name","onBlur","onChange","map","item","components","FormikFormGroup","label","handleChange","useState","visible","isInvalid","classNames","FormGroup","Label","InputGroup","component","getInputComponent","IS_REQUIRED_PASSWORD","IS_INCORRECT_LENGTH_PASSWORD","IS_INCORRECT_LENGTH_USERNAME","validationSchemas","email","yup","required","password","min","max","matches","passwordNoPattern","username","test","toLowerCase","validationSchema","initialValues","withRouter","connect","loginUser","history","onSubmit","values","handleSubmit","Form","Button","color","size","to","AuthCardContainer","cardClass","styles","card","Container","Card","CardBody","SignIn","firstName","lastName","registerUser","SignUp","GET_LIST_PRODUCTS","GET_LIST_PRODUCTS_SUCCESS","GET_LIST_PRODUCTS_ERROR","GET_LIST_PRODUCTS_CLEAR","GET_PRODUCT","GET_PRODUCT_CLEAR","GET_PRODUCT_ERROR","GET_PRODUCT_SUCCESS","CREATE_PRODUCT","CREATE_PRODUCT_SUCCESS","CREATE_PRODUCT_ERROR","getProductError","createProductError","createAdaptiveStorage","key","defaultValue","storage","sessionStorage","localStorage","getItem","StorageService","this","JSON","parse","setItem","stringify","removeItem","_session","STORAGE_PROJECT","_user","allProductsState","products","getProduct","productId","clearProductFetched","isOpen","onCancel","ready","updateReady","useEffect","Modal","centered","toggle","ModalBody","modal","modalBtn","onClick","modalCard","CardImg","src","imgUrl","imgPlaceholder","alt","modalImg","CardTitle","tag","productName","CardSubtitle","creatorFullName","useModal","modalVisible","setModalVisible","state","getListProducts","url","getListProductsClear","toggleModal","currentProductID","setCurrentProductID","Row","Col","lg","product","id","push","AllProductsPage","StylesProducts","AllProductsList","maxSize","imageSizeRules","autoClose","hideProgressBar","position","pauseOnHover","bodyClassName","toast","success","warn","FileHelper","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","image","Image","result","width","height","ToastrService","creatorEmail","createProduct","uploadedImage","useRef","imageUploaded","setImageUploaded","changeHandler","e","a","target","files","openAsDataUrl","promiseFile","model","logoPlaceholder","ref","accept","userRoutes","exact","AddProduct","authRoutes","logoutUser","Navbar","light","expand","HeaderStyles","navbar","NavbarBrand","href","Nav","nav","NavbarText","userInfoName","NavItem","navbarBtn","NavLink","Component","roles","render","accessToken","session","pathname","from","location","NonAuthMiddleware","App","route","idx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","auth","action","loadedImage","pagination","totalCount","nextOffset","created","rootReducer","combineReducers","Auth","interceptorsRequest","request","headers","authorization","Accept","Http","instance","createInstance","baseURL","interceptors","use","get","apply","arguments","patch","put","post","delete","axios","create","api","common","process","REACT_APP_BASE_URL","USER_PLACEHOLDER","AuthService","clearUser","storeUser","catch","err","userData","token","clear","signUpUser","watchUserLogin","watchUserLogOut","watchUserRegister","authSaga","loginWithEmailPasswordAsync","login","authUser","signOutAsync","signOut","registerWithEmailPasswordAsync","role","register","call","response","msg","takeEvery","all","fork","ProductsService","BASE_URL","urlRequest","getProductsList","watchGetProductsList","watchGetProduct","watchCreateProduct","productsSaga","getProductsListAsync","getAllList","getProductAsync","createProductAsync","rootSaga","AuthSaga","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.374041bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"index__card__DnqeM\",\"textUnderline\":\"index__textUnderline__2Tv-K\"};","export const LOGIN_USER = \"LOGIN_USER\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\n\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const LOGOUT_USER_SUCCESS = \"LOGOUT_USER_SUCCESS\";\r\nexport const LOGOUT_ERROR = \"LOGOUT_ERROR\";\r\n\r\nexport const REGISTER_USER = \"REGISTER_USER\";\r\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\r\nexport const REGISTER_USER_ERROR = \"REGISTER_USER_ERROR\";\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_USER,\r\n  LOGIN_ERROR,\r\n  LOGOUT_USER,\r\n  LOGOUT_USER_SUCCESS,\r\n  LOGOUT_ERROR,\r\n  REGISTER_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_ERROR,\r\n} from \"./actionTypes\";\r\n\r\nexport const loginUser = (user, history) => {\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: { user, history },\r\n  };\r\n};\r\n\r\nexport const loginSuccess = ({ user }) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const loginError = () => {\r\n  return {\r\n    type: LOGIN_ERROR,\r\n  };\r\n};\r\n\r\nexport const logoutUser = (history) => {\r\n  return {\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n  };\r\n};\r\n\r\nexport const logoutUserSuccess = () => {\r\n  return {\r\n    type: LOGOUT_USER_SUCCESS,\r\n    payload: {},\r\n  };\r\n};\r\n\r\nexport const logoutError = ({ message }) => {\r\n  return {\r\n    type: LOGOUT_ERROR,\r\n    payload: { message },\r\n  };\r\n};\r\n\r\nexport const registerUser = (user, history) => {\r\n  return {\r\n    type: REGISTER_USER,\r\n    payload: { user, history },\r\n  };\r\n};\r\n\r\nexport const registerUserSuccess = (user) => {\r\n  return {\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const registerUserError = ({ message }) => ({\r\n  type: REGISTER_USER_ERROR,\r\n  payload: { message },\r\n});\r\n","import React from \"react\";\r\n\r\nconst FormikFormError = ({ children, className }) => {\r\n  return <div className=\"d-block text-danger\">{children}</div>;\r\n};\r\n\r\nexport default FormikFormError;\r\n","import React from \"react\";\r\nimport FormikFormError from \"./FormikFormError\";\r\n\r\nconst getDeepValue = (object, path) =>\r\n  path\r\n    .replace(/\\[|\\]\\.?/g, \".\")\r\n    .split(\".\")\r\n    .filter((s) => s)\r\n    .reduce((acc, val) => acc && acc[val], object);\r\n\r\nconst FormError = ({ fieldName, errors, touched, ...rest }) => {\r\n  const error = getDeepValue(errors, fieldName);\r\n  const isTouched = getDeepValue(touched, fieldName);\r\n\r\n  return (\r\n    <>\r\n      {error && isTouched && (\r\n        <FormikFormError {...rest}>{error}</FormikFormError>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormError;\r\n","import React from \"react\";\r\nimport Select, { components } from \"react-select\";\r\n\r\nconst Option = (props) => {\r\n  const {\r\n    children,\r\n    isSelected,\r\n    hasValue,\r\n    data: { value },\r\n  } = props;\r\n  const selected = isSelected || (!hasValue && value === \"\");\r\n\r\n  return (\r\n    <components.Option {...props}>\r\n      <div className=\"d-flex flex-row justify-content-between pr-3\">\r\n        {children}\r\n        {selected && <i className=\"ri-check-line\" />}\r\n      </div>\r\n    </components.Option>\r\n  );\r\n};\r\n\r\nconst FormikDropdown = ({\r\n  field,\r\n  form,\r\n  placeholder,\r\n  isMulti = false,\r\n  options = [],\r\n}) => {\r\n  const { setFieldTouched, setFieldValue } = form;\r\n  const onChange = (option) => {\r\n    setFieldValue(\r\n      field.name,\r\n      isMulti ? option.map((item) => item.value) : option.value\r\n    );\r\n  };\r\n  const getValue = () => {\r\n    if (options) {\r\n      return isMulti\r\n        ? options.filter((option) => field.value.indexOf(option.value) >= 0)\r\n        : options.find((option) => option.value === field.value);\r\n    }\r\n    return isMulti ? [] : \"\";\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      value={getValue()}\r\n      indicatorSeparator={false}\r\n      name={field.name}\r\n      placeholder={placeholder}\r\n      onBlur={() => setFieldTouched(field.name, true)}\r\n      onChange={onChange}\r\n      options={options}\r\n      isMulti={isMulti}\r\n      components={{ Option }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormikDropdown;\r\n","import React, { useState } from \"react\";\r\nimport { Field } from \"formik\";\r\nimport { FormGroup, InputGroup, Label } from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport FormError from \"./FormError\";\r\nimport FormikDropdown from \"./FormikDropdown\";\r\n\r\nconst FormikFormGroup = ({\r\n  errors,\r\n  touched,\r\n  fieldName,\r\n  placeholder,\r\n  label = \"\",\r\n  type = \"text\",\r\n  handleChange = () => {},\r\n  options = [],\r\n  isMulti = false,\r\n}) => {\r\n  const [visible] = useState(false);\r\n  const isInvalid = errors[fieldName] && touched[fieldName];\r\n  const className = classNames(\"form-control\", isInvalid && \"is-invalid\");\r\n\r\n  const getInputComponent = (type) => {\r\n    switch (type) {\r\n      case \"password\":\r\n        return (\r\n          <InputGroup>\r\n            <Field\r\n              type={visible ? \"text\" : type}\r\n              className={className}\r\n              name={fieldName}\r\n              placeholder={placeholder}\r\n            />\r\n          </InputGroup>\r\n        );\r\n      case \"select\":\r\n        return (\r\n          <Field\r\n            name={fieldName}\r\n            errors={errors}\r\n            touched={touched}\r\n            placeholder={placeholder}\r\n            handleChange={handleChange}\r\n            component={FormikDropdown}\r\n            options={options}\r\n            isMulti={isMulti}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <Field\r\n            type={type}\r\n            className=\"form-control\"\r\n            name={fieldName}\r\n            placeholder={placeholder}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormGroup className={isInvalid ? \"mb-0\" : \"mb-3\"}>\r\n      <Label>{label}</Label>\r\n      {getInputComponent(type)}\r\n      <FormError\r\n        fieldName={fieldName}\r\n        errors={errors}\r\n        touched={touched}\r\n        className=\"ml-2\"\r\n      />\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default FormikFormGroup;\r\n","import {\r\n  PASSWORD_MAX_LENGTH,\r\n  PASSWORD_MIN_LENGTH,\r\n  USERNAME_MAX_LENGTH,\r\n  USERNAME_MIN_LENGTH,\r\n} from \"./validationRules\";\r\n\r\n// EMAIL\r\nexport const IS_INVALID_EMAIL = \"Email address is invalid\";\r\nexport const IS_REQUIRED_EMAIL = \"Email address is required\";\r\n\r\n// PASSWORD\r\nexport const IS_REQUIRED_PASSWORD = \"Password is required\";\r\nexport const IS_INCORRECT_LENGTH_PASSWORD = `Password must be from ${PASSWORD_MIN_LENGTH} to ${PASSWORD_MAX_LENGTH} symbols`;\r\nexport const IS_INCORRECT_FORMAT_PASSWORD =\r\n  \"Password should contain at least 1 letter and 1 digit\";\r\nexport const PASSWORD_DOES_NOT_MATCH = \"Passwords should match\";\r\n\r\n// USERNAME\r\nexport const IS_REQUIRED_USERNAME = \"Username is required\";\r\nexport const IS_INCORRECT_LENGTH_USERNAME = `Username must be from ${USERNAME_MIN_LENGTH} to ${USERNAME_MAX_LENGTH} symbols;`;\r\nexport const IS_INCORRECT_CASE_USERNAME =\r\n  \"Username can contain only small letters\";\r\nexport const IS_INCORRECT_FORMAT_USERNAME =\r\n  \"Username can contain only letters, digits and underscores\";\r\nexport const IS_INCORRECT_USERNAME = \"Username is invalid\";\r\nexport const IS_INCORRECT_UNDERSCORE_USERNAME =\r\n  \"Username can’t contain 2 underscores in a row\";\r\n\r\n//Filter\r\nexport const MAX_PRICE_MUST_BE_GREATER_THAN_MIN_PRICE =\r\n  \"Max price must be greater than min price\";\r\nexport const PRICE_MUST_BE_A_NUMBER = \"price must be a number\";\r\nexport const PRICE_MUST_BE_GREATER_THAN_ZERO =\r\n  \"price must be greater than zero\";\r\nexport const PRICE_IS_REQUIRED = \"price is required\";\r\n\r\n//Phone\r\nexport const IS_INCORRECT_PHONE = \"Phone number is not valid\";\r\n","export const PASSWORD_PATTERN = /^(?=.*?[a-z])(?=.*?[0-9]).{6,}$/;\r\nexport const PASSWORD_MIN_LENGTH = 6;\r\nexport const PASSWORD_MAX_LENGTH = 50;\r\n\r\n// Username\r\nexport const USERNAME_MIN_LENGTH = 3;\r\nexport const USERNAME_MAX_LENGTH = 20;\r\n","import * as yup from \"yup\";\r\nimport {\r\n  IS_INCORRECT_CASE_USERNAME,\r\n  IS_INCORRECT_FORMAT_PASSWORD,\r\n  IS_INCORRECT_FORMAT_USERNAME,\r\n  IS_INCORRECT_LENGTH_PASSWORD,\r\n  IS_INCORRECT_LENGTH_USERNAME,\r\n  IS_INCORRECT_UNDERSCORE_USERNAME,\r\n  IS_INVALID_EMAIL,\r\n  IS_REQUIRED_EMAIL,\r\n  IS_REQUIRED_PASSWORD,\r\n  IS_REQUIRED_USERNAME,\r\n  PRICE_MUST_BE_A_NUMBER,\r\n  IS_INCORRECT_PHONE,\r\n  PRICE_MUST_BE_GREATER_THAN_ZERO,\r\n  PRICE_IS_REQUIRED,\r\n} from \"./validationErrors\";\r\nimport {\r\n  PASSWORD_MAX_LENGTH,\r\n  PASSWORD_MIN_LENGTH,\r\n  PASSWORD_PATTERN,\r\n  USERNAME_MAX_LENGTH,\r\n  USERNAME_MIN_LENGTH,\r\n  PRICE_PATTERN,\r\n  PHONE_PATTERN,\r\n} from \"./validationRules\";\r\n\r\nconst falseCase = (value) => {\r\n  return !!value ? value === value.toLowerCase() : true;\r\n};\r\nconst falseUsernameFormat = (value) => {\r\n  return !!value ? /^[a-zA-Z0-9_]+$/.test(value) : true;\r\n};\r\nconst falseUnderscore = (value) => {\r\n  return !!value ? /^(?!.*__.*)[a-z][a-z0-9_-]+$/.test(value) : true;\r\n};\r\n\r\nconst validationSchemas = {\r\n  email: yup.string().email(IS_INVALID_EMAIL).required(IS_REQUIRED_EMAIL),\r\n  password: yup\r\n    .string()\r\n    .min(PASSWORD_MIN_LENGTH, IS_INCORRECT_LENGTH_PASSWORD)\r\n    .max(PASSWORD_MAX_LENGTH, IS_INCORRECT_LENGTH_PASSWORD)\r\n    .matches(PASSWORD_PATTERN, IS_INCORRECT_FORMAT_PASSWORD)\r\n    .required(IS_REQUIRED_PASSWORD),\r\n  passwordNoPattern: yup.string().required(IS_REQUIRED_PASSWORD),\r\n  username: yup\r\n    .string()\r\n    .test(\"false-case\", IS_INCORRECT_CASE_USERNAME, falseCase)\r\n    .test(\"false-format\", IS_INCORRECT_FORMAT_USERNAME, falseUsernameFormat)\r\n    .test(\"false-underscore\", IS_INCORRECT_UNDERSCORE_USERNAME, falseUnderscore)\r\n    .min(USERNAME_MIN_LENGTH, IS_INCORRECT_LENGTH_USERNAME)\r\n    .max(USERNAME_MAX_LENGTH, IS_INCORRECT_LENGTH_USERNAME)\r\n    .required(IS_REQUIRED_USERNAME),\r\n};\r\n\r\nexport default validationSchemas;\r\n","import React, { useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form } from \"reactstrap\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { loginUser } from \"../../store/auth/actions\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport * as yup from \"yup\";\r\nimport FormikFormGroup from \"../formik/FormikFormGroup\";\r\nimport { Formik } from \"formik\";\r\nimport validationSchemas from \"../../constants/validationSchemas\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: validationSchemas.email,\r\n  password: validationSchemas.passwordNoPattern,\r\n});\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst SignInForm = ({ loginUser, history }) => {\r\n  const handleSubmitForm = (values) => {\r\n    loginUser(values, history);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={handleSubmitForm}\r\n    >\r\n      {(form) => {\r\n        const { errors, touched, handleSubmit } = form;\r\n\r\n        return (\r\n          <div>\r\n            <Form className=\"w-100\" onSubmit={handleSubmit}>\r\n              <h1>Sign In</h1>\r\n              <FormikFormGroup\r\n                type={\"email\"}\r\n                errors={errors}\r\n                touched={touched}\r\n                fieldName={\"email\"}\r\n                label={\"Email address\"}\r\n                placeholder={\"Enter email\"}\r\n              />\r\n              <FormikFormGroup\r\n                type={\"password\"}\r\n                errors={errors}\r\n                touched={touched}\r\n                fieldName={\"password\"}\r\n                label={\"Password\"}\r\n                placeholder={\"Enter password\"}\r\n              />\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <Button\r\n                  color=\"dark\"\r\n                  type=\"submit\"\r\n                  className=\"w-100 mt-3 p-3 mb-3 text-uppercase\"\r\n                  size=\"md\"\r\n                >\r\n                  Sign In\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n\r\n            <Link to=\"/sign-up\">Don't have an account? Sign Up</Link>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nexport default withRouter(connect(mapStateToProps, { loginUser })(SignInForm));\r\n","import React from \"react\";\r\nimport { Card, CardBody, Container } from \"reactstrap\";\r\nimport styles from \"./index..module.scss\";\r\n\r\nconst AuthCardContainer = ({ children, cardClass = styles.card }) => {\r\n  return (\r\n    <Container>\r\n      <Card className={cardClass}>\r\n        <CardBody className=\"p-0\">{children}</CardBody>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AuthCardContainer;\r\n","import React from \"react\";\r\nimport SignInForm from \"../../components/forms/SignInForm\";\r\nimport AuthCardContainer from \"./ContainerAuth\";\r\n\r\nconst SignIn = () => {\r\n  return (\r\n    <AuthCardContainer>\r\n      <SignInForm />\r\n    </AuthCardContainer>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form } from \"reactstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { registerUser } from \"../../store/auth/actions\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport * as yup from \"yup\";\r\nimport FormikFormGroup from \"../formik/FormikFormGroup\";\r\nimport { Formik } from \"formik\";\r\nimport validationSchemas from \"../../constants/validationSchemas\";\r\n// import userRoles from \"../../constants/userRoles\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: validationSchemas.email,\r\n  password: validationSchemas.password,\r\n});\r\n\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  //  role: 1,\r\n};\r\n\r\nconst SignUpForm = ({ registerUser, history }) => {\r\n  const handleSubmitForm = (values) => {\r\n    registerUser(values, history);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmitForm}\r\n      >\r\n        {(form) => {\r\n          const { errors, touched, handleSubmit } = form;\r\n\r\n          return (\r\n            <Form className=\"w-100\" onSubmit={handleSubmit}>\r\n              <h1>Sign up</h1>\r\n              <FormikFormGroup\r\n                errors={errors}\r\n                touched={touched}\r\n                fieldName={\"firstName\"}\r\n                label={\"First Name\"}\r\n                placeholder={\"Enter first name\"}\r\n              />\r\n              <FormikFormGroup\r\n                errors={errors}\r\n                touched={touched}\r\n                fieldName={\"lastName\"}\r\n                label={\"Last Name\"}\r\n                placeholder={\"Enter Last Name\"}\r\n              />\r\n              <FormikFormGroup\r\n                type={\"email\"}\r\n                errors={errors}\r\n                touched={touched}\r\n                fieldName={\"email\"}\r\n                label={\"Email address\"}\r\n                placeholder={\"Enter email\"}\r\n              />\r\n              <FormikFormGroup\r\n                errors={errors}\r\n                touched={touched}\r\n                fieldName={\"password\"}\r\n                label={\"Password\"}\r\n                placeholder={\"Enter password\"}\r\n                type={\"password\"}\r\n              />\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <Button\r\n                  color=\"dark\"\r\n                  className=\"w-100 mt-3 p-3 text-uppercase\"\r\n                  size=\"lg\"\r\n                  type=\"submit\"\r\n                >\r\n                  Continue\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { registerUser })(SignUpForm)\r\n);\r\n","import React from \"react\";\r\nimport SignUpForm from \"../../components/forms/SignUpForm\";\r\nimport AuthCardContainer from \"./ContainerAuth\";\r\n\r\nconst SignUp = () => {\r\n  return (\r\n    <AuthCardContainer>\r\n      <SignUpForm />\r\n    </AuthCardContainer>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","export const GET_LIST_PRODUCTS = \"GET_LIST_PRODUCTS\";\r\nexport const GET_LIST_PRODUCTS_SUCCESS = \"GET_LIST_PRODUCTS_SUCCESS\";\r\nexport const GET_LIST_PRODUCTS_ERROR = \"GET_LIST_PRODUCTS_ERROR\";\r\nexport const GET_LIST_PRODUCTS_CLEAR = \"GET_LIST_PRODUCTS_CLEAR\";\r\n\r\nexport const GET_PRODUCT = \"GET_PRODUCT\";\r\nexport const GET_PRODUCT_CLEAR = \"GET_PRODUCT_CLEAR\";\r\nexport const GET_PRODUCT_ERROR = \"GET_PRODUCT_ERROR\";\r\nexport const GET_PRODUCT_SUCCESS = \"GET_PRODUCT_SUCCESS\";\r\n\r\nexport const CREATE_PRODUCT = \"CREATE_PRODUCT\";\r\nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\";\r\nexport const CREATE_PRODUCT_ERROR = \"CREATE_PRODUCT_ERROR\";\r\n","import {\r\n  GET_LIST_PRODUCTS,\r\n  GET_LIST_PRODUCTS_SUCCESS,\r\n  GET_LIST_PRODUCTS_CLEAR,\r\n  GET_LIST_PRODUCTS_ERROR,\r\n  GET_PRODUCT,\r\n  GET_PRODUCT_CLEAR,\r\n  GET_PRODUCT_ERROR,\r\n  GET_PRODUCT_SUCCESS,\r\n  CREATE_PRODUCT,\r\n  CREATE_PRODUCT_SUCCESS,\r\n  CREATE_PRODUCT_ERROR,\r\n} from \"./actionTypes\";\r\n\r\nexport const getListProducts = (url) => {\r\n  return {\r\n    payload: { url },\r\n    type: GET_LIST_PRODUCTS,\r\n  };\r\n};\r\nexport const getListProductsSuccess = (data) => {\r\n  return {\r\n    payload: data,\r\n    type: GET_LIST_PRODUCTS_SUCCESS,\r\n  };\r\n};\r\nexport const getListProductsError = ({ message }) => {\r\n  return {\r\n    payload: { message },\r\n    type: GET_LIST_PRODUCTS_CLEAR,\r\n  };\r\n};\r\nexport const getListProductsClear = () => {\r\n  return {\r\n    type: GET_LIST_PRODUCTS_ERROR,\r\n  };\r\n};\r\n\r\nexport const getProduct = (productId, history) => {\r\n  return {\r\n    payload: { productId, history },\r\n    type: GET_PRODUCT,\r\n  };\r\n};\r\n\r\nexport const getProductSuccess = ({ data }) => {\r\n  return {\r\n    payload: data,\r\n    type: GET_PRODUCT_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const getProductError = ({ message = \"Unknown error\" }) => {\r\n  return {\r\n    payload: { message },\r\n    type: GET_PRODUCT_ERROR,\r\n  };\r\n};\r\n\r\nexport const clearProductFetched = () => {\r\n  return {\r\n    type: GET_PRODUCT_CLEAR,\r\n  };\r\n};\r\n\r\nexport const createProduct = (product) => {\r\n  return {\r\n    type: CREATE_PRODUCT,\r\n    payload: product,\r\n  };\r\n};\r\n\r\nexport const createProductSuccess = (product) => {\r\n  return {\r\n    type: CREATE_PRODUCT_SUCCESS,\r\n    payload: product,\r\n  };\r\n};\r\n\r\nexport const createProductError = ({ message }) => ({\r\n  type: CREATE_PRODUCT_ERROR,\r\n  payload: { message },\r\n});\r\n","import { KEY_SESSION, KEY_USER } from \"../constants/sessionStorage\";\r\n\r\nfunction createAdaptiveStorage(key, defaultValue = null) {\r\n  let storage = sessionStorage;\r\n\r\n  if (localStorage.getItem(key)) {\r\n    storage = localStorage;\r\n  }\r\n\r\n  return new StorageService(key, storage, defaultValue);\r\n}\r\n\r\nclass StorageService {\r\n  constructor(key, storage = localStorage, defaultValue = null) {\r\n    this.key = key;\r\n    this.storage = storage;\r\n    this.defaultValue = defaultValue;\r\n  }\r\n\r\n  static get session() {\r\n    if (this._session) {\r\n      return this._session;\r\n    }\r\n\r\n    return (this._session = createAdaptiveStorage(KEY_SESSION, {}));\r\n  }\r\n\r\n  static get user() {\r\n    if (this._user) {\r\n      return this._user;\r\n    }\r\n\r\n    return (this._user = createAdaptiveStorage(KEY_USER));\r\n  }\r\n\r\n  get value() {\r\n    return JSON.parse(this.storage.getItem(this.key)) || this.defaultValue;\r\n  }\r\n\r\n  set value(value) {\r\n    return this.storage.setItem(this.key, JSON.stringify(value));\r\n  }\r\n\r\n  clear() {\r\n    this.storage.removeItem(this.key);\r\n  }\r\n}\r\n\r\nexport default StorageService;\r\n","const STORAGE_PROJECT = \"IPR_Mandybura::\";\r\n\r\nexport const KEY_SESSION = STORAGE_PROJECT + \"session\";\r\nexport const KEY_USER = STORAGE_PROJECT + \"user\";\r\n","export default __webpack_public_path__ + \"static/media/ic-placeholder.1bf37725.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardImg,\r\n  CardSubtitle,\r\n  CardTitle,\r\n  Modal,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport styles from \"./index.module.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearProductFetched, getProduct } from \"../../store/products/actions\";\r\nimport imgPlaceholder from \"../../assets/ic-placeholder.svg\";\r\n\r\nconst ConfirmationDialog = ({\r\n  isOpen,\r\n  onCancel,\r\n  productId,\r\n  clearProductFetched,\r\n  getProduct,\r\n  allProductsState,\r\n}) => {\r\n  const { item } = allProductsState;\r\n  const [ready, updateReady] = useState(false);\r\n  const fetchProduct = () => {\r\n    getProduct(productId);\r\n  };\r\n  useEffect(() => {\r\n    fetchProduct();\r\n    updateReady(true);\r\n    return () => {\r\n      clearProductFetched();\r\n    };\r\n  }, [productId]);\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} centered size=\"xl\" toggle={() => onCancel()}>\r\n      {ready && !!item && (\r\n        <ModalBody className={styles.modal}>\r\n          <Button\r\n            className={styles.modalBtn}\r\n            color=\"danger\"\r\n            onClick={() => onCancel()}\r\n          >\r\n            X\r\n          </Button>\r\n          <div className=\"d-flex flex-row justify-content-center\">\r\n            <Card className={styles.modalCard}>\r\n              <CardImg\r\n                src={!!item.imgUrl ? item.imgUrl : imgPlaceholder}\r\n                alt=\"Card image\"\r\n                className={styles.modalImg}\r\n              />\r\n              <CardTitle tag=\"h5\">{item.productName}</CardTitle>\r\n              <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n                {item.creatorFullName}\r\n              </CardSubtitle>\r\n            </Card>\r\n          </div>\r\n        </ModalBody>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ products }) => ({ allProductsState: products });\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getProduct, clearProductFetched })(\r\n    ConfirmationDialog\r\n  )\r\n);\r\n","import { useState } from \"react\";\r\n\r\nconst useModal = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const toggleModal = (state = null) => {\r\n    setModalVisible(state !== null ? state : !modalVisible);\r\n  };\r\n\r\n  return [modalVisible, toggleModal];\r\n};\r\n\r\nexport default useModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { Container, CardImg, Card } from \"reactstrap\";\r\n\r\nimport {\r\n  getListProducts,\r\n  getListProductsClear,\r\n} from \"../../store/products/actions\";\r\nimport StorageService from \"../../services/StorageService\";\r\nimport ProductDetailsModal from \"../modal/productDetails\";\r\nimport useModal from \"../../hooks/useModal.\";\r\nimport styles from \"./index.common.scss\";\r\nimport imgPlaceholder from \"../../assets/ic-placeholder.svg\";\r\n\r\nconst AllProductsLists = ({\r\n  allProductsState,\r\n  getListProducts,\r\n  getListProductsClear,\r\n  history,\r\n}) => {\r\n  const [ready, updateReady] = useState(false);\r\n  const user = StorageService.user.value;\r\n  const fetchProducts = () => {\r\n    getListProducts(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    updateReady(true);\r\n    return () => {\r\n      getListProductsClear();\r\n    };\r\n  }, []);\r\n\r\n  const [modalVisible, toggleModal] = useModal();\r\n\r\n  const [currentProductID, setCurrentProductID] = useState(null);\r\n\r\n  const onClickProduct = (id) => {\r\n    setCurrentProductID(id);\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col lg=\"12\" className=\"text-center\">\r\n          {ready &&\r\n            allProductsState.data?.map((product) => (\r\n              <Card\r\n                className=\"productCard\"\r\n                onClick={() =>\r\n                  !!user ? onClickProduct(product.id) : history.push(`/sign-in`)\r\n                }\r\n                key={product.id}\r\n              >\r\n                <CardImg\r\n                  src={!!product.imgUrl ? product.imgUrl : imgPlaceholder}\r\n                  alt=\"Card image\"\r\n                  className=\"productCardImg\"\r\n                />\r\n              </Card>\r\n            ))}\r\n        </Col>\r\n      </Row>\r\n      <ProductDetailsModal\r\n        isOpen={modalVisible}\r\n        onCancel={toggleModal}\r\n        productId={currentProductID}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\nconst mapStateToProps = ({ products }) => ({ allProductsState: products });\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getListProducts, getListProductsClear })(\r\n    AllProductsLists\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport AllProductsLists from \"../../components/common/AllProductsList\";\r\nimport StylesProducts from \"./index.module.scss\";\r\n\r\nconst AllProductsPage = () => {\r\n  return (\r\n    <div className={StylesProducts.products}>\r\n      <AllProductsLists />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllProductsPage;\r\n","export const minSize = 100;\r\nexport const maxSize = 1000;\r\nexport const imageSizeRules = `Image size must be more ${minSize}px and less ${maxSize}px`;\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst options = {\r\n  autoClose: 3000,\r\n  hideProgressBar: true,\r\n  position: \"top-right\",\r\n  pauseOnHover: false,\r\n  bodyClassName: \"toastBody\",\r\n};\r\n\r\nclass ToastrService {\r\n  success(message) {\r\n    toast.success(message, { ...options });\r\n  }\r\n\r\n  error(message) {\r\n    toast.error(message, { ...options });\r\n  }\r\n\r\n  warn(message) {\r\n    toast.warn(message, { ...options });\r\n  }\r\n}\r\n\r\nexport default new ToastrService();\r\n","import { minSize, maxSize, imageSizeRules } from \"../constants/imageSize\";\r\nimport ToastrService from \"../services/ToastrService\";\r\n\r\nconst FileHelper = class BaseFileHelper {\r\n  static openAsDataUrl(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      if (reader.error) {\r\n        return reject(\"Invalid file\");\r\n      }\r\n      reader.onload = () => {\r\n        const image = new Image();\r\n        image.src = reader.result;\r\n        image.onload = function () {\r\n          if (\r\n            minSize <= this.width &&\r\n            this.width <= maxSize &&\r\n            minSize <= this.height &&\r\n            this.height <= maxSize\r\n          ) {\r\n            return resolve(reader.result);\r\n          } else {\r\n            ToastrService.warn(imageSizeRules);\r\n          }\r\n        };\r\n      };\r\n    });\r\n  }\r\n\r\n  static openAsDataUrlWithoutCheckingSize(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      if (reader.error) {\r\n        return reject(\"Invalid file\");\r\n      }\r\n      reader.onload = () => {\r\n        return resolve(reader.result);\r\n      };\r\n    });\r\n  }\r\n};\r\nexport default FileHelper;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Button, Form } from \"reactstrap\";\r\nimport FormikFormGroup from \"../formik/FormikFormGroup\";\r\nimport { Formik } from \"formik\";\r\nimport logoPlaceholder from \"../../assets/ic-placeholder.svg\";\r\nimport FileHelper from \"../../helpers/fileHelper\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProduct } from \"../../store/products/actions\";\r\n\r\nconst initialValues = {\r\n  productName: \"\",\r\n  creatorEmail: \"haenraets@gmail.com\",\r\n  creatorFullName: \"Kurs Portov\",\r\n};\r\n\r\nconst AddNewProduct = ({ createProduct, history }) => {\r\n  const handleSubmitForm = (values) => {\r\n    const model = { values, history };\r\n    values.imgUrl = imageUploaded;\r\n    createProduct(model);\r\n  };\r\n\r\n  const uploadedImage = useRef(null);\r\n  const [imageUploaded, setImageUploaded] = useState(null);\r\n\r\n  const changeHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const promiseFile = await FileHelper.openAsDataUrl(file);\r\n    await setImageUploaded(promiseFile);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Formik initialValues={initialValues} onSubmit={handleSubmitForm}>\r\n        {({ errors, touched, handleSubmit }) => {\r\n          return (\r\n            <Form className=\"w-100\" onSubmit={handleSubmit}>\r\n              <h3>Create new Board</h3>\r\n              <div>\r\n                <img\r\n                  src={imageUploaded ? imageUploaded : logoPlaceholder}\r\n                  alt=\"Logo\"\r\n                />\r\n                <div className=\"file-input\">\r\n                  <input\r\n                    ref={uploadedImage}\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    className=\"file\"\r\n                    id=\"file\"\r\n                    onChange={(e) => changeHandler(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <FormikFormGroup\r\n                errors={errors}\r\n                touched={touched}\r\n                fieldName={\"productName\"}\r\n                label={\"Product name\"}\r\n                placeholder={\"Add product name\"}\r\n              />\r\n\r\n              <Button\r\n                color=\"success\"\r\n                type=\"submit\"\r\n                className=\"buttonLabel\"\r\n                size=\"md\"\r\n              >\r\n                Continue\r\n              </Button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = () => ({});\r\nexport default withRouter(\r\n  connect(mapStateToProps, { createProduct })(AddNewProduct)\r\n);\r\n","import SignIn from \"../pages/auth/SignIn\";\r\nimport SignUp from \"../pages/auth/SignUp\";\r\nimport AllProductsPage from \"../pages/user/allProducts\";\r\nimport AddProductPage from \"../pages/artist/addProduct\";\r\n\r\nconst userRoutes = [\r\n  { path: \"/add-product\", exact: true, component: AddProductPage },\r\n  { path: \"\", exact: true, component: AllProductsPage },\r\n];\r\n\r\nconst authRoutes = [\r\n  { path: \"/sign-up\", component: SignUp },\r\n  { path: \"/sign-in\", component: SignIn },\r\n  { path: \"/all-products\", component: AllProductsPage },\r\n  { path: \"\", exact: true, component: AllProductsPage },\r\n];\r\n\r\nexport { userRoutes, authRoutes };\r\n","import React from \"react\";\r\nimport AddProduct from \"../../components/common/AddProduct\";\r\nimport StylesProducts from \"../user/index.module.scss\";\r\n\r\nconst AddProductPage = () => {\r\n  return (\r\n    <div className={StylesProducts.products}>\r\n      <AddProduct />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProductPage;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport StorageService from \"../../services/StorageService\";\r\nimport HeaderStyles from \"./index.module.scss\";\r\nimport { logoutUser } from \"../../store/auth/actions\";\r\n\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\n\r\nconst Header = ({ logoutUser, history }) => {\r\n  const user = StorageService.user.value;\r\n  const onSubmitLogOut = () => {\r\n    logoutUser(history);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        light\r\n        expand=\"md\"\r\n        className={`navbar navbar-dark bg-dark ${HeaderStyles.navbar}`}\r\n      >\r\n        <NavbarBrand href=\"/\">Site Logo</NavbarBrand>\r\n        {!!user ? (\r\n          <>\r\n            <Nav className={HeaderStyles.nav} navbar>\r\n              <NavbarText className={HeaderStyles.userInfoName}>\r\n                {user.firstName}\r\n              </NavbarText>\r\n              <NavItem>\r\n                <Button className={HeaderStyles.navbarBtn}>\r\n                  I am an Artist\r\n                </Button>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Button\r\n                  className={HeaderStyles.navbarBtn}\r\n                  onClick={onSubmitLogOut}\r\n                >\r\n                  Sign Out\r\n                </Button>\r\n              </NavItem>\r\n            </Nav>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Nav className={HeaderStyles.nav} navbar>\r\n              <NavItem>\r\n                <NavLink href=\"/sign-in\">Sign In</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"/sign-up\">Sign Up</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </>\r\n        )}\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nexport default withRouter(connect(mapStateToProps, { logoutUser })(Header));\r\n","import React from \"react\";\r\nimport { Redirect, Route, withRouter } from \"react-router-dom\";\r\nimport Header from \"../../components/layout/Header\";\r\nimport StorageService from \"../../services/StorageService\";\r\n\r\nconst AuthMiddleware = ({ component: Component, exact = false, roles }) => {\r\n\r\n  return (\r\n    <Route\r\n      exact={exact}\r\n      render={(props) => {\r\n          const user = StorageService.user.value;\r\n          const accessToken = StorageService.session.value;\r\n          if (!!user && !!accessToken ) {\r\n          return (\r\n            <>\r\n              <Header />\r\n              <Component {...props} />\r\n            </>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <Redirect\r\n            to={{ pathname: \"/sign-in\", state: { from: props.location } }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(AuthMiddleware);\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Header from \"../../components/layout/Header\";\r\n\r\nconst NonAuthMiddleware = ({ component: Component, exact = false }) => (\r\n  <Route\r\n    exact={exact}\r\n    render={(props) => {\r\n      return (\r\n        <>\r\n          <Header />\r\n          <Component {...props} />\r\n        </>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default NonAuthMiddleware;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { authRoutes, userRoutes } from \"./routes/allRoutes\";\r\nimport AuthMiddleware from \"./routes/middleware/AuthMiddleware\";\r\nimport NonAuthMiddleware from \"./routes/middleware/NonAuthMiddleware\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <Router>\r\n          <Switch>\r\n          {authRoutes.map((route, idx) => (\r\n              <NonAuthMiddleware\r\n                  path={route.path}\r\n                  component={route.component}\r\n                  exact={route.exact}\r\n                  key={idx}\r\n              />\r\n          ))}\r\n\r\n          {userRoutes.map((route, idx) => {\r\n              return (\r\n                  <AuthMiddleware\r\n                      path={route.path}\r\n                      component={route.component}\r\n                      exact={route.exact}\r\n                      roles={route.roles}\r\n                      key={idx}\r\n                  />\r\n              );\r\n          })}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  LOGIN_USER,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  LOGOUT_USER,\r\n  LOGOUT_USER_SUCCESS,\r\n  LOGOUT_ERROR,\r\n  REGISTER_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_ERROR,\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  message: \"\",\r\n  user: null,\r\n  loading: false,\r\n};\r\n\r\nconst auth = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case LOGIN_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case LOGIN_ERROR:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    case LOGOUT_USER:\r\n      state = { ...state };\r\n      break;\r\n    case LOGOUT_USER_SUCCESS:\r\n      state = { ...state };\r\n      break;\r\n    case LOGOUT_ERROR:\r\n      state = { ...state, loading: false };\r\n      break;\r\n\r\n    case REGISTER_USER:\r\n      return { ...state, loading: true, error: \"\" };\r\n    case REGISTER_USER_SUCCESS:\r\n      return { ...state, loading: false, user: action.payload, error: \"\" };\r\n    case REGISTER_USER_ERROR:\r\n      return { ...state, loading: false };\r\n\r\n    default:\r\n      state = { ...state };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default auth;\r\n","import {\r\n  GET_LIST_PRODUCTS,\r\n  GET_LIST_PRODUCTS_SUCCESS,\r\n  GET_LIST_PRODUCTS_CLEAR,\r\n  GET_LIST_PRODUCTS_ERROR,\r\n  GET_PRODUCT,\r\n  GET_PRODUCT_CLEAR,\r\n  GET_PRODUCT_ERROR,\r\n  GET_PRODUCT_SUCCESS,\r\n  CREATE_PRODUCT,\r\n  CREATE_PRODUCT_SUCCESS,\r\n  CREATE_PRODUCT_ERROR,\r\n} from \"./actionTypes\";\r\nimport { DEFAULT_OFFSET } from \"../../constants/pagination\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  item: null,\r\n  error: \"\",\r\n  loading: false,\r\n  loadedImage: true,\r\n  url: \"\",\r\n};\r\n\r\nconst products = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LIST_PRODUCTS:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n        url: action.payload.url,\r\n      };\r\n      break;\r\n    case GET_LIST_PRODUCTS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        data: action.payload.data,\r\n        pagination: action.payload.pagination,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case GET_LIST_PRODUCTS_CLEAR:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case GET_LIST_PRODUCTS_ERROR:\r\n      state = {\r\n        ...state,\r\n        data: [],\r\n        pagination: { totalCount: 0, nextOffset: DEFAULT_OFFSET },\r\n        error: \"\",\r\n      };\r\n      break;\r\n    case GET_PRODUCT:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case GET_PRODUCT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        item: action.payload,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case GET_PRODUCT_ERROR:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case GET_PRODUCT_CLEAR:\r\n      state = {\r\n        ...state,\r\n        item: null,\r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    case CREATE_PRODUCT:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case CREATE_PRODUCT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        created: action.payload,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case CREATE_PRODUCT_ERROR:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      state = { ...state };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default products;\r\n","export const DEFAULT_OFFSET = 0;\r\n","import { combineReducers } from \"redux\";\r\nimport Auth from \"./auth/reducer\";\r\nimport products from \"./products/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  Auth,\r\n  products,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from \"axios\";\r\nimport StorageService from \"./StorageService\";\r\n\r\nconst interceptorsRequest = (request) => {\r\n  if (!!StorageService.session.value) {\r\n    request.headers = {\r\n      authorization: `Bearer ${StorageService.session.value}`,\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n  }\r\n  return request;\r\n};\r\n\r\nclass Http {\r\n  constructor() {\r\n    this.instance = Http.createInstance({\r\n      baseURL: `/api/`,\r\n    });\r\n\r\n    this.instance.interceptors.request.use(interceptorsRequest);\r\n  }\r\n\r\n  static createInstance() {\r\n    return axios.create.apply(axios, arguments);\r\n  }\r\n\r\n  get() {\r\n    return this.instance.get.apply(this.instance, arguments);\r\n  }\r\n\r\n  patch() {\r\n    return this.instance.patch.apply(this.instance, arguments);\r\n  }\r\n\r\n  put() {\r\n    return this.instance.put.apply(this.instance, arguments);\r\n  }\r\n\r\n  post() {\r\n    return this.instance.post.apply(this.instance, arguments);\r\n  }\r\n\r\n  delete() {\r\n    return this.instance.delete.apply(this.instance, arguments);\r\n  }\r\n}\r\n\r\nHttp.api = {\r\n  common: process.env.REACT_APP_BASE_URL,\r\n};\r\n\r\nexport default Http;\r\n","import Http from \"./HttpService\";\r\nimport StorageService from \"./StorageService\";\r\n\r\nconst USER_PLACEHOLDER = {\r\n  firstName: \"FirstName\",\r\n  lastName: \"LastName\",\r\n};\r\n\r\nclass AuthService extends Http {\r\n  getUser() {\r\n    const user = StorageService.user.value;\r\n    return user ? user : USER_PLACEHOLDER;\r\n  }\r\n\r\n  login(model) {\r\n    this.clearUser();\r\n    return this.post(\"/auth/login\", model)\r\n      .then((user) => {\r\n        this.storeUser(user);\r\n        return user;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  signOut() {\r\n    return this.clearUser();\r\n  }\r\n\r\n  register(model) {\r\n    this.clearUser();\r\n    return this.post(\"/auth/signup\", model)\r\n      .then((user) => {\r\n        this.storeUser(user);\r\n        return user;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  storeUser(userData) {\r\n    const { user, token } = userData.data;\r\n    const storage = sessionStorage;\r\n    StorageService.user.storage = storage;\r\n    StorageService.session.storage = storage;\r\n\r\n    StorageService.user.value = user;\r\n    StorageService.session.value = token;\r\n  }\r\n\r\n  clearUser() {\r\n    StorageService.user.clear();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER } from \"./actionTypes\";\r\n\r\nimport {\r\n  loginSuccess,\r\n  loginError,\r\n  logoutUserSuccess,\r\n  logoutError,\r\n  registerUserSuccess,\r\n  registerUserError,\r\n} from \"./actions\";\r\n\r\nimport AuthService from \"../../services/AuthService\";\r\nimport ToastrService from \"../../services/ToastrService\";\r\n\r\nconst loginWithEmailPasswordAsync = async (email, password) => {\r\n  const authUser = await AuthService.login({ password, email });\r\n  return authUser;\r\n};\r\n\r\nconst signOutAsync = () => {\r\n  return AuthService.signOut();\r\n};\r\n\r\nconst registerWithEmailPasswordAsync = (\r\n  email,\r\n  password,\r\n  firstName,\r\n  lastName,\r\n  role\r\n) =>\r\n  AuthService.register({\r\n    email,\r\n    password,\r\n    firstName,\r\n    lastName,\r\n  });\r\n\r\nfunction* loginUser({ payload: { user, history } }) {\r\n  const response = yield call(\r\n    loginWithEmailPasswordAsync,\r\n    user.email,\r\n    user.password\r\n  );\r\n  if (!!response.data?.token) {\r\n    history.push(\"/all-products\");\r\n    yield put(loginSuccess(response?.data.token));\r\n  }\r\n\r\n  if (!!response.response?.data?.msg) {\r\n    ToastrService.error(response.response.data.msg);\r\n    yield put(loginError());\r\n  }\r\n}\r\n\r\nfunction* logoutUser({ payload: { history } }) {\r\n  try {\r\n    yield call(signOutAsync);\r\n    yield put(logoutUserSuccess());\r\n    history.push(\"/all-products\");\r\n  } catch (error) {\r\n    ToastrService.error(error.message);\r\n    yield put(logoutError(error));\r\n  }\r\n}\r\n\r\nfunction* signUpUser({ payload }) {\r\n  const { email, password, firstName, lastName } = payload.user;\r\n  const { history } = payload;\r\n  try {\r\n    const response = yield call(\r\n      registerWithEmailPasswordAsync,\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName\r\n    );\r\n    if (!!response.data?.token) {\r\n      history.push(\"/all-products\");\r\n      yield put(registerUserSuccess(response));\r\n    }\r\n\r\n    if (!!response.response?.data?.msg) {\r\n      ToastrService.error(response.response.data.msg);\r\n      yield put(registerUserError());\r\n    }\r\n  } catch (error) {\r\n    yield put(registerUserError(error));\r\n  }\r\n}\r\n\r\nexport function* watchUserLogin() {\r\n  yield takeEvery(LOGIN_USER, loginUser);\r\n}\r\n\r\nexport function* watchUserLogOut() {\r\n  yield takeEvery(LOGOUT_USER, logoutUser);\r\n}\r\n\r\nexport function* watchUserRegister() {\r\n  yield takeEvery(REGISTER_USER, signUpUser);\r\n}\r\n\r\nfunction* authSaga() {\r\n  yield all([\r\n    fork(watchUserLogin),\r\n    fork(watchUserLogOut),\r\n    fork(watchUserRegister),\r\n  ]);\r\n}\r\n\r\nexport default authSaga;\r\n","import Http from \"./HttpService\";\r\n\r\nclass ProductsService extends Http {\r\n  BASE_URL = \"/products\";\r\n\r\n  getProduct(id) {\r\n    return this.get(`${this.BASE_URL}/${id}`);\r\n  }\r\n\r\n  getAllList(urlRequest) {\r\n    return this.get(`${this.BASE_URL}`);\r\n  }\r\n\r\n  createProduct(model) {\r\n    return this.post(`${this.BASE_URL}`, model.values);\r\n  }\r\n}\r\n\r\nexport default new ProductsService();\r\n","import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  getListProductsError,\r\n  getListProductsSuccess,\r\n  getProductSuccess,\r\n  getProductError,\r\n  createProductSuccess,\r\n  createProductError,\r\n} from \"./actions\";\r\nimport { GET_LIST_PRODUCTS, GET_PRODUCT, CREATE_PRODUCT } from \"./actionTypes\";\r\n\r\nimport ProductsService from \"../../services/ProductService\";\r\nimport ToastrService from \"../../services/ToastrService\";\r\n\r\nconst getProductsListAsync = async (url) => {\r\n  return await ProductsService.getAllList(url);\r\n};\r\n\r\nconst getProductAsync = async (id) => {\r\n  return await ProductsService.getProduct(id);\r\n};\r\n\r\nconst createProductAsync = async (model) => {\r\n  return await ProductsService.createProduct(model);\r\n};\r\n\r\nfunction* getProductsList({ payload: { url } }) {\r\n  try {\r\n    const response = yield call(getProductsListAsync, url);\r\n    yield put(getListProductsSuccess(response));\r\n  } catch (error) {\r\n    yield put(getListProductsError(error));\r\n  }\r\n}\r\n\r\nfunction* getProduct({ payload: { productId } }) {\r\n  try {\r\n    const response = yield call(getProductAsync, productId);\r\n    yield put(getProductSuccess(response));\r\n  } catch (error) {\r\n    yield put(getProductError(error));\r\n  }\r\n}\r\n\r\nfunction* createProduct({ payload: model }) {\r\n  try {\r\n    const response = yield call(createProductAsync, model);\r\n    yield put(createProductSuccess(response));\r\n  } catch (error) {\r\n    ToastrService.error(error.message);\r\n    yield put(createProductError());\r\n  }\r\n}\r\n\r\nexport function* watchGetProductsList() {\r\n  yield takeEvery(GET_LIST_PRODUCTS, getProductsList);\r\n}\r\n\r\nexport function* watchGetProduct() {\r\n  yield takeEvery(GET_PRODUCT, getProduct);\r\n}\r\n\r\nexport function* watchCreateProduct() {\r\n  yield takeEvery(CREATE_PRODUCT, createProduct);\r\n}\r\n\r\nfunction* productsSaga() {\r\n  yield all([\r\n    fork(watchGetProductsList),\r\n    fork(watchGetProduct),\r\n    fork(watchCreateProduct),\r\n  ]);\r\n}\r\n\r\nexport default productsSaga;\r\n","import { all } from \"redux-saga/effects\";\r\n\r\nimport AuthSaga from \"./auth/saga\";\r\nimport productsSaga from \"./products/saga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([AuthSaga(), productsSaga()]);\r\n}\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nimport rootSaga from \"./saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"layout_nav__2fges\",\"navbar\":\"layout_navbar__1kBil\",\"navbarBtn\":\"layout_navbarBtn__3TGtN\",\"containerUser\":\"layout_containerUser__myEbZ\",\"card\":\"layout_card__2y1sq\",\"userInfo\":\"layout_userInfo__duzEQ\",\"userInfoName\":\"layout_userInfoName__33P2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalbody\":\"modal_modalbody__3LGvs\",\"modalBtn\":\"modal_modalBtn__1YoNj\",\"modalCard\":\"modal_modalCard__8O6sc\",\"modalImg\":\"modal_modalImg__1g9HX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"user_products__3Kw8N\"};"],"sourceRoot":""}